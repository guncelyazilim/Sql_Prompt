{
  "id": "099d996f-7ae9-4b88-8889-9569d7344619",
  "prefix": "snp_ObjectsD_Aktarma_V4",
  "description": "Nesne Aktarım",
  "body": "/*\r\nİşlevi : ObjectsD ayarlarını script olarak alıp aktarmaya yarar\r\n\r\nKullanımı : \r\n\t1. Aşağıdaki Scriptte @Objects tablosuna hangi nesnelerin aktarılacağı yazılır ve \"Kaynak\" Veri Tabanında çalıştırılır.\r\n\t2. Oluşan script hedef veri tabanında çalıştırılır.\r\n\t\t\r\nAyarlar : \r\n\tDİKKAT: Scipt almadan önce aşağıdaki ayarları yapın :\r\n\t\t1. Results To text yap\r\n\t\t2. \"SSMS > Options > Query Results > SQL Server\" sayfasındaki \"Maximum number of characters displayed in each column\" alanınnı 20.000 gibi büyük bir sayı verin.\r\n\t\r\nDiğer Seçenekler : \r\n\t1. @KolonlariAktar : Aşağıdaki ayaları aktarır\r\n\t\t* Kolon Ayarları (lookup kolonlar da oluşuturulur)\r\n\t\t* Güncel için Kolon Yetkileri\r\n\t\t* Güncel için Nesne yetkisi \r\n\t2. @VeriIslemleriniAktar \r\n\t\t* Veri işlemleri aktarılır. Aktarım yapılabilmesi için veri nesnesinin hedef veri tabanında olması gerekir.\r\n\t\t\r\n*/\r\n\r\nSet NoCount On\r\n\r\nDeclare @KolonlariAktar TinyInt, @VeriIslemleriniAktar TinyInt\r\nDeclare @Objects Table(ITObjectName Varchar(100))\r\n\r\n/*********** BEGIN INPUT ************/\r\nInsert @Objects (ITObjectName) \r\nValues \r\n('SP15_CopyKullaniciProgramYetki')\r\n\r\nSet @KolonlariAktar = 1\r\nSet @VeriIslemleriniAktar = 1\r\n\r\n/*********** END INPUT ************/\r\n\r\n\r\n/*  1. Tanımlamalar */\r\nPrint 'Set NoCount On '\r\nPrint 'Set Ansi_Null_Dflt_On On'\r\n\r\nPrint 'If Object_Id(''tempdb..#Alanlar'') Is Not Null Drop Table #Alanlar\t\r\nCreate Table #Alanlar(ITObjectName varchar(100), FieldName Varchar(40), FieldCaption Varchar(40), ShowSiraNo int, CaptionSize int, Type tinyint, NotInGrid tinyint, ITRequired tinyint, LField tinyint, LDataSet varchar(50), LKeyFields varchar(50), LLKeyFields varchar(50), LResultField varchar(50), LWhereText varchar(500), LOrderText varchar(500), LDetailDataSet varchar(50) , ITReadOnly TinyInt, ITVisible  TinyInt, ITDefValue Varchar(100), ITObjectItemGroupName Varchar(100), ROMITEdit tinyint, ROMITInsert tinyint, ROMITDelete tinyint, ROMITReadOnly tinyint)'\r\n\r\nPrint 'If OBJECT_ID(''tempdb..#VeriIslemleri'') Is Not Null Drop Table #VeriIslemleri \r\nCreate Table #VeriIslemleri (ITobjectName Varchar(100),SiraNo Smallint,VeriIslemAdi Varchar(50),SPITObjectName Varchar(100),DSITObjectName Varchar(100),DSITObjectID2Name Varchar(100),SFilterFieldName Varchar(50),DFilterFieldName Varchar(50),IsOnay tinyint,IsBeginGroup tinyint,SPITObjectIDWhereText Varchar(200),DSITWhereText Varchar(200),DS2ITWhereText Varchar(200),ITShortCutName Varchar(100),AnalizDataName Varchar(100),ITObjectItemGroupName Varchar(100),IsDSRequery tinyint,ShowInTab tinyint,IsToolbarButton tinyint, VeriIslemTypeID int) '\r\n\r\nIf @KolonlariAktar = 1 Begin\r\n\t/* 2.A Alanlar Kaydedilir. */\r\n\tSelect  'Insert #Alanlar (ITObjectName, FieldName, FieldCaption, ShowSiraNo, CaptionSize, Type, NotInGrid, ITRequired, LField, LDataSet, LKeyFields, LLKeyFields, LResultField, LWhereText, LOrderText, LDetailDataSet, ITReadOnly, ITVisible, ITDefValue, ITObjectItemGroupName, ROMITEdit, ROMITInsert, ROMITDelete, ROMITReadOnly)' + CHAR(13) +\r\n\t\t\t' VALUES(''' + OM.ITObjectName + ''',''' + OD.FieldName + ''', ''' + FieldCaption + ''', ' + CONVERT(VARCHAR(100), OD.ShowSiraNo) + ', ' + CONVERT(VARCHAR(100), ISNULL(OD.CaptionSize,7)) + ', '\r\n\t\t\t+ CONVERT(VARCHAR(100), OD.Type)+ ', '+ CONVERT(VARCHAR(100), IsNull(OD.NotInGrid, 0)) + ', '+ CONVERT(VARCHAR(100), IsNull(OD.ITRequired, 0)) + ', '\r\n\t\t\t+ CONVERT(VARCHAR(100), ISNULL(OD.LField,0))+ ','''+ ISNULL(OD.LDataSet, '')+ ''','''+ ISNULL(OD.LKeyFields,'') + ''','''+ ISNULL(OD.LLKeyFields, '') + ''',''' + ISNULL(OD.LResultField,'') + ''','''\r\n\t\t\t+ ISNULL(OD.LWhereText, '') + ''',''' + ISNULL(OD.LOrderText, '') + ''',''' + ISNULL(OD.LDetailDataSet, '') + ''', ' + CONVERT(VARCHAR(100), ISNULL(ROD.ITReadOnly,0)) + ', '\r\n\t\t\t+ CONVERT(VARCHAR(100), ISNULL(ROD.ITVisible,0))+ ', ''' + ISNULL(ROD.ITDefValue, '') + ''', ' + ISNULL('''' + G.ItemGroupName + '''', 'NULL')+ ', ' +  \r\n\t\t\t+ CONVERT(VARCHAR(100), ROM.ITEdit)+ ', '+ CONVERT(VARCHAR(100), ROM.ITInsert)+ ', '+ CONVERT(VARCHAR(100), ROM.ITDelete)+ ', '+ CONVERT(VARCHAR(100), ISNULL(ROM.ITReadOnly,0)) + ')' \r\n\tFrom\tIT15_ObjectsD OD \r\n\t\t\tInner Join IT15_ObjectsM OM On OM.ITObjectID = OD.ITObjectID\r\n\t\t\tLEFT OUTER JOIN IT15_RolObjectsM ROM On ROM.ITObjectID = OM.ITObjectID And ROM.RolID = 1 /* Güncel Rolünün Yetkileri alınır */\r\n\t\t\tLEFT OUTER JOIN IT15_RolObjectsD ROD On ROD.RolObjectMID = ROM.RolObjectMID And ROD.ITObjectDID = OD.ITObjectDID\r\n\t\t\tLEFT OUTER JOIN dbo.IT15_ObjectsItemGroup G ON G.ITObjectItemGroupID = OD.ITObjectItemGroupID\r\n\tWhere\tOM.ITObjectName in (Select O.ITObjectName From @Objects O)\r\n\r\n\r\n\t/* 2.X */\r\n\tPrint '\r\n\t\r\n\tDeclare @name Varchar(100)\r\n\tDeclare c Cursor Local For\r\n\t\tSelect Distinct ITObjectName From #Alanlar\r\n\tOpen c\r\n\tFetch Next From c Into @name\r\n\tWhile @@FETCH_STATUS = 0 Begin\r\n\t\r\n\t\tExec SP15_AlanYenile @name\r\n\r\n\t\tFetch Next From c Into @name\r\n\tEnd\r\n\tClose c\r\n\tDeallocate c\r\n\r\n\t'\r\n\r\nPRINT '\r\n\tInsert  IT15_ObjectsItemGroup (ITObjectID, ItemGroupType, ItemGroupName)\r\n\tSelect  Distinct OM.ITObjectID, 1, A.ITObjectItemGroupName\r\n\tFrom    #Alanlar A\r\n\t\t\tInner Join IT15_ObjectsM OM On OM.ITObjectName = A.ITobjectName Collate Database_Default\r\n\tWhere   ISNULL( A.ITObjectItemGroupName, '''') <> ''''\r\n\t\t\tAnd not exists(select * from IT15_ObjectsItemGroup T Where T.ITObjectID = OM.ITObjectID And T.ItemGroupName = A.ITObjectItemGroupName Collate Database_Default And T.ItemGroupType = 1 )\r\n'\r\n\r\n\r\n\t/*2.B.1 Alanlar aktarılır - var olanlar güncellenir (yeni normal kolon hiçbir zaman eklenmez.) */\r\n\tPrint '\r\n\tDeclare @Adet int\r\n\r\n\tUpdate\tOD Set \r\n\t\t\tFieldCaption = A.FieldCaption, \r\n\t\t\tShowSiraNo = A.ShowSiraNo, \r\n\t\t\tCaptionSize = A.CaptionSize, \r\n\t\t\tType = A.Type,\r\n\t\t\tNotInGrid = A.NotInGrid,\r\n\t\t\tITRequired = A.ITRequired,\r\n\t\t\tLField = A.LField, \r\n\t\t\tLDataSet = A.LDataSet, \r\n\t\t\tLKeyFields = A.LKeyFields, \r\n\t\t\tLLKeyFields = A.LLKeyFields, \r\n\t\t\tLResultField = A.LResultField, \r\n\t\t\tLWhereText = A.LWhereText, \r\n\t\t\tLOrderText = A.LOrderText, \r\n\t\t\tLDetailDataSet = A.LDetailDataSet,\r\n\t\t\tITObjectItemGroupID = G.ITObjectItemGroupID\r\n\tFrom\tIT15_ObjectsD OD \r\n\t\t\tInner Join IT15_ObjectsM OM On OM.ITObjectID = OD.ITObjectID\r\n\t\t\tInner Join #Alanlar A On OD.FieldName = A.FieldName COLLATE DATABASE_DEFAULT  And A.ITObjectName = OM.ITObjectName COLLATE DATABASE_DEFAULT \r\n\t\t\tLeft Join IT15_ObjectsItemGroup G ON G.ITObjectID = OM.ITObjectID And G.ItemGroupName = A.ITObjectItemGroupName Collate Database_Default And G.ItemGroupType = 1\r\n\r\n\tSet @Adet = @@ROWCOUNT\r\n\r\n\tIf @Adet = 0 Raiserror(''Hiç Güncelleme yapılmadı. Muhtemelen bir yanlışlık var.'',16,1)\r\n\tElse Print Convert(varchar(10), @Adet) +  '' adet satır güncellendi.''\r\n\r\n\t'\r\n\r\n\r\n\r\n\t/*\t2.B.2 Alanlar aktarılır - LOOK-UP kolonlar eklenir, yetkisi verilir. */\r\n\tPrint '\r\n\tInsert IT15_ObjectsD (ITObjectID, FieldName, FieldCaption, ShowSiraNo, CaptionSize, Type, NotInGrid, ITRequired, LField, LDataSet, LKeyFields, LLKeyFields, LResultField,\r\n\t\t   LWhereText, LOrderText, LDetailDataSet, FieldType)\r\n\r\n\tSELECT\tOM.ITObjectID, A.FieldName, A.FieldCaption, A.ShowSiraNo, A.CaptionSize, A.Type, A.NotInGrid, A.ITRequired, A.LField, A.LDataSet, A.LKeyFields,\r\n\t\t\tA.LLKeyFields, A.LResultField, A.LWhereText, A.LOrderText, A.LDetailDataSet, ''varchar''\r\n\tFrom\t#Alanlar A\r\n\t\t\tINNER JOIN IT15_ObjectsM OM On OM.ITObjectName = A.ITObjectName Collate Database_Default\r\n\r\n\tWhere\tISNULL(A.LDataSet,'''') <> ''''\r\n\t\t\tAnd Not Exists(\r\n\t\t\t\tSELECT * FROM IT15_ObjectsD OD Where OD.ITObjectID = OM.ITObjectID And OD.LDataSet = A.LDataSet Collate Database_Default \r\n\t\t\t\tAnd OD.LKeyFields = A.LKeyFields Collate Database_Default And OD.LLKeyFields = A.LLKeyFields Collate Database_Default And OD.LResultField = A.LResultField Collate Database_Default\r\n\t\t\t)\r\n\r\n\tSet @Adet = @@ROWCOUNT\r\n\r\n\tIf @Adet > 0 Begin\t\r\n\t\tPrint ''     '' + convert(varchar(10), @Adet) + '' adet yeni lookup kolon yaratıldı. Tövbe.. oluştuldu.''\r\n\r\n\t\t/*  Eğer yeni kolon eklendiyse yetkisi de verilir. */\r\n\t\tInsert  IT15_RolObjectsD(RolObjectMID, ITObjectDID, ITReadOnly, ITVisible, ITDefValue)\r\n\t\tSelect  ROM.RolObjectMID, OD.ITObjectDID, A.ITReadOnly, A.ITVisible, A.ITDefValue\r\n\t\tFrom    IT15_ObjectsD OD\r\n\t\t\t\tInner Join IT15_ObjectsM OM On OM.ITObjectID = OD.ITObjectID\r\n\t\t\t\tInner Join #Alanlar A On A.ITObjectName = OM.ITObjectName Collate Database_Default And A.FieldName = OD.FieldName Collate Database_Default\r\n\t\t\t\tInner Join IT15_RolObjectsM ROM On ROM.ITObjectID = OM.ITObjectID And  ROM.RolID = 1\r\n\t\tWhere   Not Exists (Select  * From  IT15_RolObjectsD ROD Where  ROD.RolObjectMID = ROM.RolObjectMID And ROD.ITObjectDID = OD.ITObjectDID)\r\n\t\r\n\t\tSet @Adet = @@ROWCOUNT\r\n\r\n\t\tPrint ''     '' + Convert(varchar(10), @Adet) + '' adet yeni lookup için yetki verildi.''\r\n\r\n\tEnd\r\n\t'\r\n\r\n\t/* 2.B.3 Tüm kolon yetkileri güncellenir. (sadece güncel rolü için) */\r\n\r\n\tPrint '\r\n\t\r\n\t;With TMP AS (Select Distinct ITObjectName, ROMITEdit, ROMITInsert, ROMITDelete, ROMITReadOnly From #Alanlar)\r\n\tUpdate  ROM\r\n\tSet     ITEdit = ROMITEdit, ITInsert = ROMITInsert, ITDelete = ROMITDelete, ITReadOnly = ROMITReadOnly\r\n\tFrom    IT15_RolObjectsM ROM \r\n\t\t\tInner Join IT15_ObjectsM OM On OM.ITObjectID = ROM.ITObjectID\r\n\t\t\tInner Join TMP T On T.ITObjectName = OM.ITObjectName COLLATE DATABASE_DEFAULT\r\n\tWhere\tROM.RolID = 1 /* Sadece GUNCEL */\r\n\t\t\r\n\tSet @Adet = @@ROWCOUNT\r\n\r\n\tIf @Adet = 0 Raiserror(''Rol Yetkilerde hiç güncelleme yapılmadı. iki sebebi olabilir : Nesne yok veya nesnenin GUNCEL e yetkisi yok....'',16,1)\r\n\tElse Begin \r\n\t\tPrint Convert(varchar(10), @Adet) + '' adet nesne için GÜNCEL rolü yetkisi güncellendi.''\r\n\t\t\r\n\t\tUpdate  ROD\r\n\t\tSet     ROD.ITReadOnly = A.ITReadOnly, ROD.ITVisible = A.ITVisible, ROD.ITDefValue = A.ITDefValue\r\n\t\tFrom    IT15_ObjectsD OD\r\n\t\t\t\tInner Join IT15_RolObjectsD ROD On OD.ITObjectDID = ROD.ITObjectDID\r\n\t\t\t\tInner Join IT15_RolObjectsM ROM On ROD.RolObjectMID = ROM.RolObjectMID And ROM.RolID = 1 /* Sadece GUNCEL */\r\n\t\t\t\tInner Join IT15_ObjectsM OM On OM.ITObjectID = OD.ITObjectID\r\n\t\t\t\tInner Join #Alanlar A On OD.FieldName = A.FieldName COLLATE DATABASE_DEFAULT  And A.ITObjectName = OM.ITObjectName COLLATE DATABASE_DEFAULT\r\n\r\n\r\n\t\tSet @Adet = @@ROWCOUNT\r\n\r\n\t\tIf @Adet = 0 Raiserror(''Kolon yetkilerde hiç güncelleme yapılmadı. Bir şeyler yolunda gitmiyor...'',16,1)\r\n\t\tElse Print Convert(varchar(10), @Adet) + '' adet kolon yetkisi güncellendi. (sadece GÜNCEL rolü için)''\r\n\r\n\t\t\r\n\tEnd\r\n\t'\r\nEnd \r\n\r\n\r\n\r\nIf @VeriIslemleriniAktar = 1 Begin\r\n\t/* 3.A Veri işlemleri kaydedilir. */\r\n\tSelect\r\n\t'Insert #VeriIslemleri (ITobjectName, SiraNo, VeriIslemAdi, SPITObjectName, DSITObjectName, DSITObjectID2Name, SFilterFieldName, DFilterFieldName, IsOnay, IsBeginGroup, SPITObjectIDWhereText, DSITWhereText, DS2ITWhereText, ITShortCutName, AnalizDataName, ITObjectItemGroupName, IsDSRequery, ShowInTab, IsToolbarButton, VeriIslemTypeID)' + CHAR(13) +\r\n\t\t\t'Values( ''' + OM.ITobjectName + ''', '+ CONVERT(VARCHAR(100), ISNULL(SiraNo, 0)) + ',''' + ISNULL(VeriIslemAdi, '') + ''', ''' + ISNULL(SPOM.ITObjectName, '') + ''', ''' + ISNULL(DSOM.ITObjectName, '')+ ''', '''\r\n\t\t\t+ ISNULL(DSOM2.ITObjectName, '') + ''', ''' + ISNULL(SFilterFieldName, '') + ''', ''' + ISNULL(DFilterFieldName, '') + ''', ', + CONVERT(VARCHAR(100), ISNULL(IsOnay,0)) + ', '+ CONVERT(VARCHAR(100), ISNULL(IsBeginGroup,0)) + ', '''\r\n\t\t\t+ ISNULL(SPITObjectIDWhereText, '') + ''', '''+ ISNULL(DSITWhereText, '') + ''', '''+ ISNULL(DS2ITWhereText, '') + ''', '''\r\n\t\t\t+ ISNULL(ISC.ITShortcut, '') + ''', ''' + ISNULL(ADM.AnalizAdi,'') + ''', '+ ISNULL(''''+G.ItemGroupName+'''', 'NULL') + ', '+ CONVERT(VARCHAR(100), ISNULL(IsDSRequery, 0)) + ', '\r\n\t\t\t+ CONVERT(VARCHAR(100), ISNULL(ShowInTab,0)) + ', ' + CONVERT(VARCHAR(100), ISNULL(IsToolbarButton,0)) + ', ' + CONVERT(VARCHAR(100), ISNULL(VeriIslemTypeID,2)) \r\n\t\t\t+ ')'\r\n\tFrom\tIT15_ObjectsVeriIslemleri VI\r\n\t\t\tLeft Outer Join IT15_ObjectsM OM On\tOM.ITObjectID = VI.ITobjectID\r\n\t\t\tLeft Outer Join IT15_ObjectsM SPOM On SPOM.ITObjectID = VI.SPITObjectID\r\n\t\t\tLeft Outer Join IT15_ObjectsM DSOM On DSOM.ITObjectID = VI.DSITObjectID\r\n\t\t\tLeft Outer Join IT15_ObjectsM DSOM2 On DSOM2.ITObjectID = VI.DSITObjectID2\r\n\t\t\tLeft Outer Join IT15_ITShortCuts ISC On ISC.ITShortcutID = VI.ITShortCutID\r\n\t\t\tLeft Outer Join IT15_AnalizDataM ADM On ADM.AnalizDataID = VI.AnalizDataID\r\n\t\t\tLeft Outer Join IT15_ObjectsItemGroup G On G.ITObjectItemGroupID = VI.ITObjectItemGroupID\r\n\tWhere\tOM.ITObjectName in (Select O.ITObjectName From @Objects O)\r\n\r\n\t\r\n\r\n\t/* 3.B Veri işlemleri aktarılır */\r\n\tPrint '\r\n\tInsert  IT15_ObjectsItemGroup (ITObjectID, ItemGroupType, ItemGroupName)\r\n\tSelect  Distinct OM.ITObjectID, 2, VI.ITObjectItemGroupName\r\n\tFrom    #VeriIslemleri VI\r\n\t\t\tInner Join IT15_ObjectsM OM On OM.ITObjectName = VI.ITobjectName Collate Database_Default\r\n\tWhere   ISNULL(VI.ITObjectItemGroupName, '''') <> ''''\r\n\t\t\tAnd not exists(select * from IT15_ObjectsItemGroup T Where T.ITObjectID = OM.ITObjectID And T.ItemGroupName = VI.ITObjectItemGroupName Collate Database_Default And T.ItemGroupType = 2 )\r\n\r\n\tInsert  IT15_ObjectsVeriIslemleri (ITObjectID, SiraNo, VeriIslemAdi, SPITObjectID, DSITObjectID, DSITObjectID2, SFilterFieldName, DFilterFieldName, IsOnay, IsBeginGroup, SPITObjectIDWhereText, DSITWhereText, DS2ITWhereText, ITShortCutID, AnalizDataID, ITObjectItemGroupID, IsDSRequery, ShowInTab, IsToolbarButton, VeriIslemTypeID)\r\n\tSelect  OM.ITObjectID, VI.SiraNo, VI.VeriIslemAdi, SPOM.ITObjectID, DSOM.ITObjectID, DSOM2.ITObjectID, VI.SFilterFieldName, VI.DFilterFieldName, VI.IsOnay, VI.IsBeginGroup, VI.SPITObjectIDWhereText, VI.DSITWhereText, VI.DS2ITWhereText, ISC.ITShortcutID, ADM.AnalizDataID, G.ITObjectItemGroupID, VI.IsDSRequery, VI.ShowInTab, VI.IsToolbarButton, VI.VeriIslemTypeID\r\n\tFrom    #VeriIslemleri VI\r\n\t\t\tLeft Outer Join IT15_ObjectsM OM On OM.ITObjectName = VI.ITobjectName Collate Database_Default\r\n\t\t\tLeft Outer Join IT15_ObjectsM SPOM On SPOM.ITObjectName = VI.SPITObjectName Collate Database_Default\r\n\t\t\tLeft Outer Join IT15_ObjectsM DSOM On DSOM.ITObjectName = VI.DSITObjectName Collate Database_Default\r\n\t\t\tLeft Outer Join IT15_ObjectsM DSOM2 On DSOM2.ITObjectName = VI.DSITObjectID2Name Collate Database_Default\r\n\t\t\tLeft Outer Join IT15_ITShortCuts ISC On ISC.ITShortcut = VI.ITShortCutName Collate Database_Default\r\n\t\t\tLeft Outer Join IT15_AnalizDataM ADM On ADM.AnalizAdi = VI.AnalizDataName Collate Database_Default\r\n\t\t\tLeft Outer Join IT15_ObjectsItemGroup G On G.ITObjectID = OM.ITObjectID And G.ItemGroupName = VI.ITObjectItemGroupName Collate Database_Default\r\n\tWhere Not Exists(Select * From IT15_ObjectsVeriIslemleri OVI Where OVI.ITObjectID = OM.ITObjectID And OVI.VeriIslemAdi = VI.VeriIslemAdi Collate Database_Default)\r\n\t\t\tAnd (\r\n\t\t\t\tNot(ISNULL(VI.SPITObjectName,'''') <> '''' And SPOM.ITObjectID Is Null)\r\n\t\t\t\tAnd\r\n\t\t\t\tNot(ISNULL(VI.DSITObjectName,'''') <> '''' And DSOM.ITObjectID Is Null )\r\n\t\t\t\tAnd\r\n\t\t\t\tNot(ISNULL(VI.DSITObjectID2Name,'''') <> '''' And DSOM2.ITObjectID Is Null )\r\n\t\t\t)\r\n\r\n\r\n\tSet @Adet = @@ROWCOUNT\r\n\r\n\r\n\tIf @Adet = 0 Raiserror(''Hiç veri işlemi eklenmedi. '',16,1)\r\n\tElse Begin\r\n\t\tDeclare @ToplamAdet int = (Select COUNT(*) From #VeriIslemleri VI)\r\n\t\tPrint Convert(varchar(10), @Adet) + '' adet veri işlemi eklendi. Toplam veri işlem adedi : '' + Convert(varchar(10),  @ToplamAdet ) \r\n\tEnd \r\n\r\n\tDeclare @M varchar(1000)\r\n\tSelect\t@M = ISNULL(@M + '','', '''') +  H.N\r\n\tFrom\t#VeriIslemleri V Cross Apply (Select V.SPITObjectName As N Union Select V.DSITObjectName Union Select V.DSITObjectID2Name ) H\r\n\tWhere Not Exists(Select * From IT15_ObjectsM OM Where OM.ITObjectName = H.N Collate Database_Default) And  ISNULL(H.N,'''') <> ''''\r\n\tIf @M Is Not Null Raiserror(''Şu nesneler olmadığı için veri işlemleri eklenemedi. '',16,1, @M)\r\n\r\n\r\n\t'\r\nEnd"
}